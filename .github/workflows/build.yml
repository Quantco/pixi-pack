name: Build
on:
  pull_request:
  push:
    branches: [main]

permissions: read-all

jobs:
  metadata:
    name: Check if version changed
    runs-on: ubuntu-latest
    outputs:
      release: ${{ github.event_name == 'push' && github.repository == 'Quantco/pixi-pack' && steps.version-metadata.outputs.changed == 'true' }}
      version: ${{ steps.version-metadata.outputs.newVersion }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: Quantco/ui-actions/version-metadata@cd71d2a0e30b25569f6d723e57acca83347e58fc # v1.0.18
        id: version-metadata
        with:
          file: ./Cargo.toml
          token: ${{ secrets.GITHUB_TOKEN }}
          version-extraction-override: 'regex:version = "(.*)"'

  build:
    name: Build Binary (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    needs: [metadata]
    permissions:
      actions: read
      id-token: write
      contents: write
      attestations: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-24.04-arm
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-11-arm
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools
        if: endsWith(matrix.target, 'musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
        with:
          key: build-${{ matrix.target }}-${{ matrix.os }}

      - name: Build
        run: |
          cargo build --profile release --locked --color always${{ endsWith(matrix.target, 'musl') && ' --no-default-features --features rustls-tls' || '' }} --target ${{ matrix.target }} --bins
          mv target/${{ matrix.target }}/release/pixi-pack${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }} pixi-pack-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}
          mv target/${{ matrix.target }}/release/pixi-unpack${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }} pixi-unpack-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        if: needs.metadata.outputs.release == 'true'
        with:
          subject-path: |
            pixi-pack-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}
            pixi-unpack-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}

      - name: Upload Artifact
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: pixi-pack-${{ matrix.target }}
          path: pixi-pack-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}
          if-no-files-found: error

      - name: Upload Artifact
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: pixi-unpack-${{ matrix.target }}
          path: pixi-unpack-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}
          if-no-files-found: error

  hashes:
    name: Compute hashes
    needs: [metadata, build]
    if: needs.metadata.outputs.release == 'true'
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Download artifacts
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          pattern: pixi-*
          merge-multiple: true
      - name: Compute hashes
        id: hash
        run: |
          set -exuo pipefail
          files=$(ls pixi-*)
          echo "hashes=$(sha256sum $files | base64 -w0)" >> "${GITHUB_OUTPUT}"

  provenance:
    needs: [metadata, hashes]
    permissions:
      actions: read
      id-token: write
      contents: write
    if: needs.metadata.outputs.release == 'true'
    # This cannot be pinned: https://github.com/slsa-framework/slsa-github-generator?tab=readme-ov-file#referencing-slsa-builders-and-generators
    # https://github.com/slsa-framework/slsa-verifier/issues/12
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.hashes.outputs.hashes }}"
      upload-assets: false

  release:
    name: Create Release
    needs: [metadata, build, provenance]
    if: needs.metadata.outputs.release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Download artifacts
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          pattern: pixi-*
          merge-multiple: true
      - name: Download provenance
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: ${{ needs.provenance.outputs.provenance-name }}
          merge-multiple: true
      - name: Push v${{ needs.metadata.outputs.version }} tag
        run: |
          git tag v${{ needs.metadata.outputs.version }}
          git push origin v${{ needs.metadata.outputs.version }}
      - name: Create Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          generate_release_notes: true
          tag_name: v${{ needs.metadata.outputs.version }}
          draft: true
          files: |
            ${{ needs.provenance.outputs.provenance-name }}
            pixi-*
